<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-US"><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="en-US" /><updated>2023-05-25T20:22:44-07:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Hello friend</title><subtitle>Gui Pires&apos; personal website.</subtitle><author><name>Gui Pires</name><email>mail@gpir.es</email></author><entry><title type="html">Example</title><link href="http://localhost:4000/example/" rel="alternate" type="text/html" title="Example" /><published>2023-05-25T00:00:00-07:00</published><updated>2023-05-25T00:00:00-07:00</updated><id>http://localhost:4000/example</id><content type="html" xml:base="http://localhost:4000/example/">&lt;section id=&quot;sec:org079ea13&quot; class=&quot;level1 unnumbered&quot;&gt;
&lt;h1 class=&quot;unnumbered&quot;&gt;48 - Robot vacuum&lt;/h1&gt;
&lt;p&gt;An ellipsoid can alternatively be parameterized by &lt;span
class=&quot;math inline&quot;&gt;&lt;em&gt;E&lt;/em&gt; = {&lt;em&gt;c&lt;/em&gt; + &lt;em&gt;Σ&lt;/em&gt;&lt;sup&gt;1/2&lt;/sup&gt;&lt;em&gt;u&lt;/em&gt; : ∥&lt;em&gt;u&lt;/em&gt;∥&lt;sub&gt;2&lt;/sub&gt; ≤ 1}&lt;/span&gt;.
We can intersect it with the polyhedron constraints:&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;$$\begin{aligned}
\sup_{ {\lVert u \rVert}_2 \leq 1} {a_i}^T (c + \Sigma^{1/2} u)
&amp;amp;\leq b_i \\
{a_i}^T c + \sup_{ {\lVert u \rVert}_2 \leq 1} {a_i}^T \Sigma^{1/2} u
&amp;amp;\leq b_i \\
{a_i}^T c + \sup_{ {\lVert u \rVert}_2 \leq 1} \big((\Sigma^{1/2})^T
a_i^T\big)^T u &amp;amp;\leq b_i \\
{a_i}^T c + \sup_{ {\lVert u \rVert}_2 \leq 1} \big(\Sigma^{1/2}
a_i^T\big)^T u &amp;amp;\leq b_i \label{step4} &amp;amp;&amp;amp; \text{Because
$\Sigma^{1/2}$ is symmetric}\\
{a_i}^T c + \left\lVert\Sigma^{1/2} a_i \right\rVert_{2} &amp;amp;\leq b_i
\label{step5} \\
{a_i}^T c + \left\lVert\Sigma^{1/2} a_i \right\rVert_{2} - b_i &amp;amp;\leq
0
\end{aligned}$$&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The step from (&lt;a href=&quot;#step4&quot; data-reference-type=&quot;ref&quot;
data-reference=&quot;step4&quot;&gt;[step4]&lt;/a&gt;) to (&lt;a href=&quot;#step5&quot;
data-reference-type=&quot;ref&quot; data-reference=&quot;step5&quot;&gt;[step5]&lt;/a&gt;) can be
understood by observing that the supremum of &lt;span
class=&quot;math inline&quot;&gt;(&lt;em&gt;Σ&lt;/em&gt;&lt;sup&gt;1/2&lt;/sup&gt;&lt;em&gt;a&lt;/em&gt;&lt;sub&gt;&lt;em&gt;i&lt;/em&gt;&lt;/sub&gt;&lt;sup&gt;&lt;em&gt;T&lt;/em&gt;&lt;/sup&gt;)&lt;sup&gt;&lt;em&gt;T&lt;/em&gt;&lt;/sup&gt;&lt;em&gt;u&lt;/em&gt;&lt;/span&gt;
w.r.t &lt;span class=&quot;math inline&quot;&gt;&lt;em&gt;u&lt;/em&gt;&lt;/span&gt; is reached when &lt;span
class=&quot;math inline&quot;&gt;&lt;em&gt;u&lt;/em&gt;&lt;/span&gt; is parallel to &lt;span
class=&quot;math inline&quot;&gt;(&lt;em&gt;Σ&lt;/em&gt;&lt;sup&gt;1/2&lt;/sup&gt;&lt;em&gt;a&lt;/em&gt;&lt;sub&gt;&lt;em&gt;i&lt;/em&gt;&lt;/sub&gt;)&lt;sup&gt;&lt;em&gt;T&lt;/em&gt;&lt;/sup&gt;&lt;/span&gt;.
Since &lt;span class=&quot;math inline&quot;&gt;&lt;em&gt;u&lt;/em&gt;&lt;/span&gt; is a unit vector, we
can rewrite it as &lt;span class=&quot;math inline&quot;&gt;$\frac{\Sigma^{1/2}
a_i}{\left\lVert\Sigma^{1/2} a_i \right\rVert_{2} }$&lt;/span&gt; and do&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;$$\begin{aligned}
(\Sigma^{1/2} a_i)^T \frac{\Sigma^{1/2} a_i}{\left\lVert\Sigma^{1/2} a_i
\right\rVert_{2} } \
&amp;amp;= \frac{ {\left\lVert\Sigma^{1/2} a_i \right\rVert_{2}
}^2}{\left\lVert\Sigma^{1/2} a_i \right\rVert_{2} } \\
&amp;amp;= \left\lVert\Sigma^{1/2} a_i \right\rVert_{2}
\end{aligned}$$&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;So we obtain a linear constraint for each column of &lt;span
class=&quot;math inline&quot;&gt;&lt;em&gt;A&lt;/em&gt;&lt;/span&gt;, and can thus write the LP:&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;$$\begin{aligned}
&amp;amp; \min_{c} &amp;amp; &amp;amp; - e^T c \\
&amp;amp; \textrm{s.t.} &amp;amp; &amp;amp; {a_i}^T c + \left\lVert\Sigma^{1/2} a_i
\right\rVert_{2} - b_i \leq 0, i \in \{1,\ldots,m\}
\end{aligned}$$&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;To use my solution, we need to compute &lt;span
class=&quot;math inline&quot;&gt;&lt;em&gt;Σ&lt;/em&gt;&lt;sup&gt;1/2&lt;/sup&gt;&lt;/span&gt;. Luckily it is 2x2,
so there is a straightforward formula (&lt;a
href=&quot;https://en.wikipedia.org/wiki/Square_root_of_a_2_by_2_matrix&quot;
class=&quot;uri&quot;&gt;https://en.wikipedia.org/wiki/Square_root_of_a_2_by_2_matrix&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;For the given matrix &lt;span class=&quot;math inline&quot;&gt;&lt;em&gt;Σ&lt;/em&gt;&lt;/span&gt;, its
square-root (computed by the linked method) is &lt;span
class=&quot;math display&quot;&gt;$$\begin{aligned}
\begin{bmatrix}
1.0603   &amp;amp; -0.342025 \\
-0.342025 &amp;amp;  2.9397
\end{bmatrix}
\end{aligned}$$&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;See below the implementation, using CVXPY:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import cvxpy as cp
import numpy as np

c = cp.Variable(2)
A = np.array([
    [1, 1],
    [1, -1]
])
b = np.array([10, 10])
e = np.array([1, 0])

sigma_sqrt = np.array([
    [1.0603, -0.342025],
    [-0.342025,  2.9397],
])

# sqrt of validation sigma
#sigma_sqrt = np.array([
#    [1.3572 , 0.76605],
#    [0.76605, 2.6428 ]
#])

constraints = [
    A[i].T @ c + np.linalg.norm(sigma_sqrt @ A[i], ord=2) - b[i] &amp;lt;= 0
    for i in range(2)
]

prob = cp.Problem(cp.Minimize(-e.T @ c), constraints)
prob.solve()

# Print result.
print(&amp;quot;The optimal value is&amp;quot;, prob.value)
print(&amp;quot;A solution c is&amp;quot;, c.value)

The optimal value is -6.8680318592201335
A solution c is [6.86803186 0.43681798]&lt;/code&gt;&lt;/pre&gt;
&lt;/section&gt;
&lt;section id=&quot;sec:org7e5391f&quot; class=&quot;level1 unnumbered&quot;&gt;
&lt;h1 class=&quot;unnumbered&quot;&gt;54 - Data rates&lt;/h1&gt;
&lt;p&gt;The objective function is linear, and most of the constraints are
affine. The only problematic constraint is the budget constraint. I want
to decouple the cost constraints from one another, because they have a
tricky non-linearity. So introducing auxiliary variables &lt;span
class=&quot;math inline&quot;&gt;&lt;em&gt;z&lt;/em&gt;&lt;sub&gt;&lt;em&gt;i&lt;/em&gt;&lt;/sub&gt;&lt;/span&gt;, we can
rewrite the budget constraint as&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;$$\begin{aligned}
\begin{cases}
\alpha_i x_i + \frac{\beta_i}{2}\max\{0, x_i - \frac{C_i}{2}\}^2 \leq
z_i, i=1,...,5 \\
\sum_{i=1}^5 z_i \leq B
\end{cases}
\end{aligned}$$&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Rearranging the first inequality:&lt;/p&gt;
&lt;div class=&quot;empheq&quot;&gt;
&lt;p&gt;align _i x_i + {0, x_i - }^2 &amp;amp;z_i&lt;br /&gt;
{0, x_i - }^2 &amp;amp;(z_i - _i x_i)&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;We can now use the equivalence shown in the lectures and write, with
new auxiliary variables &lt;span
class=&quot;math inline&quot;&gt;&lt;em&gt;y&lt;/em&gt;&lt;sub&gt;&lt;em&gt;i&lt;/em&gt;&lt;/sub&gt;&lt;/span&gt;:&lt;/p&gt;
&lt;div class=&quot;empheq&quot;&gt;
&lt;p&gt;align {0, x_i - } y_i &lt;span id=&quot;ineq1&quot; label=&quot;ineq1&quot;&gt;&lt;/span&gt;&lt;br /&gt;
y_i^2 (z_i - _i x_i) &lt;span id=&quot;ineq2&quot; label=&quot;ineq2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Let us focus on inequality (&lt;a href=&quot;#ineq2&quot;
data-reference-type=&quot;ref&quot; data-reference=&quot;ineq2&quot;&gt;[ineq2]&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;$$\begin{aligned}
y_i^2 &amp;amp;\leq \underbrace{(z_i - \alpha_i x_i)\frac{2}{\beta_i}
}_{\geq 0\text{, since~$\alpha_i x_i \geq 0$ and $\alpha_i x_i \leq
z_i$} }
\end{aligned}$$&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;So we can use the “key fact” from the lectures and write:&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;$$\begin{aligned}
\left\lVert\begin{bmatrix} 2y_i \\ (z_i - \alpha_i x_i)\frac{2}{\beta_i}
- 1\end{bmatrix}\right\rVert_2 &amp;amp;\leq  (z_i - \alpha_i
x_i)\frac{2}{\beta_i} + 1
\end{aligned}$$&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Which is a valid constraint for a SOCP. Now, addressing (&lt;a
href=&quot;#ineq1&quot; data-reference-type=&quot;ref&quot;
data-reference=&quot;ineq1&quot;&gt;[ineq1]&lt;/a&gt;), we can simply rewrite it as:&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;$$\begin{aligned}
0 \leq y_i \\
x_i - \frac{C_i}{2} \leq y_i
\end{aligned}$$&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;So we arrive at the final form for our optimization problem, which we
have shown can be cast as a SOCP:&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;$$\begin{aligned}
&amp;amp; \max_{r, x_1, ..., x_5, z_1, ..., z_5, y_1, ..., y_5} &amp;amp; &amp;amp;
r \\
&amp;amp; \text{subject to} &amp;amp; &amp;amp; \\
&amp;amp; &amp;amp; &amp;amp; r = x_1 + x_2 \\
&amp;amp; &amp;amp; &amp;amp; x_1 + x_3 = x_4 \\
&amp;amp; &amp;amp; &amp;amp; x_2 = x_3 + x_5 \\
&amp;amp; &amp;amp; &amp;amp; x_4 + x_5 = r \\
&amp;amp; &amp;amp; &amp;amp; x_i \geq 0 \\
&amp;amp; &amp;amp; &amp;amp; x_i \leq C_i \\
&amp;amp; &amp;amp; &amp;amp; \sum_{i=1}^5 z_i \leq B \\
&amp;amp; &amp;amp; &amp;amp; \left\lVert\begin{bmatrix} 2y_i \\ (z_i - \alpha_i
x_i)\frac{2}{\beta_i} - 1\end{bmatrix}\right\rVert_2 &amp;amp;\leq  (z_i -
\alpha_i x_i)\frac{2}{\beta_i} + 1, i = 1, ..., 5 \\
&amp;amp; &amp;amp; &amp;amp; 0 \leq y_i \\
&amp;amp; &amp;amp; &amp;amp; x_i - \frac{C_i}{2} \leq y_i, i = 1, ..., 5 \\
\end{aligned}$$&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Rewritten in the canonical form:&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;$$\begin{aligned}
&amp;amp; \min_{r, x_1, ..., x_5, z_1, ..., z_5, y_1, ..., y_5} &amp;amp; &amp;amp;
-r \\
&amp;amp; \text{subject to} &amp;amp; &amp;amp; \\
&amp;amp; &amp;amp; &amp;amp; r - x_1 - x_2 = 0 \\
&amp;amp; &amp;amp; &amp;amp; x_1 + x_3 - x_4 = 0 \\
&amp;amp; &amp;amp; &amp;amp; x_2 - x_3 - x_5 = 0 \\
&amp;amp; &amp;amp; &amp;amp; x_4 + x_5 - r = 0 \\
&amp;amp; &amp;amp; &amp;amp; -x_i \leq 0 \\
&amp;amp; &amp;amp; &amp;amp; x_i - C_i \leq 0 \\
&amp;amp; &amp;amp; &amp;amp; \sum_{i=1}^5 z_i - B \leq 0 \\
&amp;amp; &amp;amp; &amp;amp; \left\lVert\begin{bmatrix} 2y_i \\ (z_i - \alpha_i
x_i)\frac{2}{\beta_i} - 1\end{bmatrix}\right\rVert_2 &amp;amp;\leq  (z_i -
\alpha_i x_i)\frac{2}{\beta_i} + 1, i = 1, ..., 5 \\
&amp;amp; &amp;amp; &amp;amp; -y_i \leq 0 \\
&amp;amp; &amp;amp; &amp;amp; x_i - \frac{C_i}{2} - y_i \leq 0, i = 1, ..., 5 \\
\end{aligned}$$&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;See below the implementation and solution in CVXPY&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import cvxpy as cp
import numpy as np

r = cp.Variable(1)
x = cp.Variable(5)

# to give the flow constraints in vector form
vec_r = cp.reshape(r, (1, 1))
vec_x = cp.reshape(x, (5, 1))
flow_vars = cp.reshape(cp.vstack((vec_r, vec_x)), 6)

# auxiliary vars
y = cp.Variable(5)
z = cp.Variable(5)

B = 15.
alpha = np.array([2., 1., 5., 3., 1.])
beta = np.array([2., 2., 0.5, 2., 1.])
C = np.array([10., 6., 8., 10., 8.])

F = np.array([
    # r  x1  x2  x3  x4  x5
    [ 1, -1, -1,  0,  0,  0],
    [ 0,  1,  0,  1, -1,  0],
    [ 0,  0,  1, -1,  0, -1],
    [-1,  0,  0,  0,  1,  1],
])

ones = np.ones(5)

constraints = [
    F @ flow_vars &amp;lt;= 0,
    ones @ z &amp;lt;= B,
    y &amp;gt;= 0,
    x - C/2 - y &amp;lt;= 0,
    x &amp;gt;= 0,
    x &amp;lt;= C
]

constraints += [
    cp.pnorm(
        cp.vstack((2*y[i],
                  (z[i] - alpha[i]*x[i])*2/beta[i] - 1)),
        p=2
    ) &amp;lt;= (z[i] - alpha[i]*x[i])*2/beta[i] + 1
    for i in range(5)
]

prob = cp.Problem(cp.Minimize(-r), constraints)
prob.solve()

# Print result.
print(&amp;quot;The optimal value r is&amp;quot;, r.value)
print(&amp;quot;The optimal link x is&amp;quot;, x.value)

The optimal value r is [5.23333333]
The optimal link x is [8.99999988e-01 4.33333334e+00 5.11970231e-11 8.99999988e-01
 4.33333334e+00]&lt;/code&gt;&lt;/pre&gt;
&lt;/section&gt;
&lt;section id=&quot;sec:org737d322&quot; class=&quot;level1 unnumbered&quot;&gt;
&lt;h1 class=&quot;unnumbered&quot;&gt;61 - Optimal linear estimators for uncertain
covariance&lt;/h1&gt;
&lt;p&gt;We can rewrite the cost function (omitting the supremum specification
for brevity) as:&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;$$\begin{aligned}
\sup\Big\{
\begin{bmatrix}
s^T &amp;amp; -1 &amp;amp; r
\end{bmatrix}
\begin{bmatrix}
\Sigma + \mu \mu^T &amp;amp; \mu \\
\mu &amp;amp; 1 \\
\end{bmatrix}
\begin{bmatrix}
s \\
-1 \\
r
\end{bmatrix}
\Big\} &amp;amp;=
\sup\Big\{
\begin{bmatrix}
s^T &amp;amp; -1 &amp;amp; r
\end{bmatrix}
\begin{bmatrix}
\sum_{k=1}^K \pi_k \Sigma_k + \mu \mu^T &amp;amp; \mu \\
\mu &amp;amp; 1 \\
\end{bmatrix}
\begin{bmatrix}
s \\
-1 \\
r
\end{bmatrix}
\Big\} \\
&amp;amp;=
\sup\Big\{
\begin{bmatrix}
s^T &amp;amp; -1 &amp;amp; r
\end{bmatrix}
\begin{bmatrix}
\mu \mu^T &amp;amp; \mu \\
\mu &amp;amp; 1 \\
\end{bmatrix}
\begin{bmatrix}
s \\
-1 \\
r
\end{bmatrix} +
s^T \big( \sum_{k=1}^K \pi_k \Sigma_k\big) s
\Big\} \\
&amp;amp;=
\begin{bmatrix}
s^T &amp;amp; -1 &amp;amp; r
\end{bmatrix}
\begin{bmatrix}
\mu \mu^T &amp;amp; \mu \\
\mu &amp;amp; 1 \\
\end{bmatrix}
\begin{bmatrix}
s \\
-1 \\
r
\end{bmatrix} +
\sup\Big\{
s^T \big( \sum_{k=1}^K \pi_k \Sigma_k\big) s
\Big\} \label{supr1} \\
&amp;amp;=
\begin{bmatrix}
s^T &amp;amp; -1 &amp;amp; r
\end{bmatrix}
\begin{bmatrix}
\mu \mu^T &amp;amp; \mu \\
\mu &amp;amp; 1 \\
\end{bmatrix}
\begin{bmatrix}
s \\
-1 \\
r
\end{bmatrix} +
\sup\Big\{
\sum_{k=1}^K \pi_k s^T \Sigma_k s
\Big\} \\
&amp;amp;=
\begin{bmatrix}
s^T &amp;amp; -1 &amp;amp; r
\end{bmatrix}
\begin{bmatrix}
\mu \mu^T &amp;amp; \mu \\
\mu &amp;amp; 1 \\
\end{bmatrix}
\begin{bmatrix}
s \\
-1 \\
r
\end{bmatrix} +
\max\Big\{s^T \Sigma_k s \Big\}
\end{aligned}$$&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;In (&lt;a href=&quot;#supr1&quot; data-reference-type=&quot;ref&quot;
data-reference=&quot;supr1&quot;&gt;[supr1]&lt;/a&gt;) I move the supremum in, because
&lt;span class=&quot;math inline&quot;&gt;$\begin{bmatrix} \mu \mu^T &amp;amp; \mu \\ \mu
&amp;amp; 1 \\ \end{bmatrix}$&lt;/span&gt; is positive semi-definite and so the
first term is &lt;span class=&quot;math inline&quot;&gt; ≥ 0&lt;/span&gt;, and independent
from the &lt;span
class=&quot;math inline&quot;&gt;&lt;em&gt;Σ&lt;/em&gt;&lt;sub&gt;&lt;em&gt;k&lt;/em&gt;&lt;/sub&gt;&lt;/span&gt;. To take the
final step, we use the fact that all of the &lt;span
class=&quot;math inline&quot;&gt;&lt;em&gt;Σ&lt;/em&gt;&lt;sub&gt;&lt;em&gt;k&lt;/em&gt;&lt;/sub&gt;&lt;/span&gt; are p.s.d.
(since they are covariance matrices), and so all of the summands are
&lt;span class=&quot;math inline&quot;&gt;≥&lt;/span&gt; 0, and since &lt;span
class=&quot;math inline&quot;&gt;∑&lt;em&gt;π&lt;/em&gt;&lt;sub&gt;&lt;em&gt;k&lt;/em&gt;&lt;/sub&gt; = 1&lt;/span&gt; and
&lt;span class=&quot;math inline&quot;&gt;&lt;em&gt;π&lt;/em&gt;&lt;sub&gt;&lt;em&gt;k&lt;/em&gt;&lt;/sub&gt; ≥ 0&lt;/span&gt;,
the supremum is reached when we put all of the “mass” of &lt;span
class=&quot;math inline&quot;&gt;&lt;em&gt;π&lt;/em&gt;&lt;/span&gt; in the term with the largest
value.&lt;/p&gt;
&lt;p&gt;Now, introducing two epigraph variables, we can rewrite the
problem:&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;$$\begin{aligned}
&amp;amp; \min_{s, r, t_1, t_2} &amp;amp; &amp;amp; t_1 + t_2 \\
&amp;amp; \text{subject to} &amp;amp; &amp;amp; \\
&amp;amp; &amp;amp; &amp;amp; \begin{bmatrix}
s^T &amp;amp; -1 &amp;amp; r
\end{bmatrix}
\begin{bmatrix}
\mu \mu^T &amp;amp; \mu \\
\mu &amp;amp; 1 \\
\end{bmatrix}
\begin{bmatrix}
s \\
-1 \\
r
\end{bmatrix} \leq t_1 \\
&amp;amp; &amp;amp; &amp;amp; \max\Big\{s^T \Sigma_k s \Big\} \leq t_2
\end{aligned}$$&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Using the fact that &lt;span
class=&quot;math inline&quot;&gt;max {&lt;em&gt;a&lt;/em&gt;&lt;sub&gt;1&lt;/sub&gt;, ..., &lt;em&gt;a&lt;/em&gt;&lt;sub&gt;&lt;em&gt;K&lt;/em&gt;&lt;/sub&gt;} ≤ &lt;em&gt;ϵ&lt;/em&gt; ↔︎ &lt;em&gt;a&lt;/em&gt;&lt;sub&gt;&lt;em&gt;i&lt;/em&gt;&lt;/sub&gt; ≤ &lt;em&gt;ϵ&lt;/em&gt;, &lt;em&gt;i&lt;/em&gt; = 1, ..., &lt;em&gt;K&lt;/em&gt;&lt;/span&gt;,
we can substitute the second inequality by &lt;span
class=&quot;math inline&quot;&gt;&lt;em&gt;K&lt;/em&gt;&lt;/span&gt; inequalities:&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;$$\begin{aligned}
&amp;amp; \min_{s, r, t_1, t_2} &amp;amp; &amp;amp; t_1 + t_2 \\
&amp;amp; \text{subject to} &amp;amp; &amp;amp; \\
&amp;amp; &amp;amp; &amp;amp; \begin{bmatrix}
s^T &amp;amp; -1 &amp;amp; r
\end{bmatrix}
\begin{bmatrix}
\mu \mu^T &amp;amp; \mu \\
\mu &amp;amp; 1 \\
\end{bmatrix}
\begin{bmatrix}
s \\
-1 \\
r
\end{bmatrix} \leq t_1 \\
&amp;amp; &amp;amp; &amp;amp; s^T \Sigma_k s \leq t_2,\ k = 1,..,K
\end{aligned}$$&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;which is a QCQP.&lt;/p&gt;
&lt;/section&gt;</content><author><name>Gui Pires</name><email>mail@gpir.es</email></author><summary type="html">48 - Robot vacuum</summary></entry></feed>